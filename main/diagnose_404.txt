curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36" -b "cookie_name=cookie_value" https://example.com/some/path


curl https://stream.pacificaservice.org/khen_128k
fails with 404 

try setting user agent
curl -A "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36" https://stream.pacificaservice.org/khen_128k
 still get 404

try to set referrer

curl -A "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/109.0.0.0 Safari/537.36" -H"Referrrer: https://www.radiorethink.com/" https://stream.pacificaservice.org/khen_128k

didn't work

try header that did work

curl -H 'GET /khen_128 HTTP/1.1\
Accept: */*\
Accept-Encoding: identity;q=1, *;q=0\
Accept-Language: en-US,en;q=0.9\
Connection: keep-alive\
DNT: 1\
Host: stream.pacificaservice.org:9000\
Range: bytes=0-\
Referer: https://www.radiorethink.com/\
Sec-Fetch-Dest: audio\
Sec-Fetch-Mode: no-cors\
Sec-Fetch-Site: cross-site\
Sec-Fetch-Storage-Access: none\
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\
sec-ch-ua: "Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"\
sec-ch-ua-mobile: ?0\
sec-ch-ua-platform: "Linux"\
' https://stream.pacificaservice.org/khen_128k



The following gave a 400 (bad request) rather than 404

curl -H 'Accept: */*\
Accept-Encoding: identity;q=1, *;q=0\
Accept-Language: en-US,en;q=0.9\
Connection: keep-alive\
DNT: 1\
Host: stream.pacificaservice.org:9000\
Range: bytes=0-\
Referer: https://www.radiorethink.com/\
Sec-Fetch-Dest: audio\
Sec-Fetch-Mode: no-cors\
Sec-Fetch-Site: cross-site\
Sec-Fetch-Storage-Access: none\
User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36\
sec-ch-ua: "Not;A=Brand";v="99", "Google Chrome";v="139", "Chromium";v="139"\
sec-ch-ua-mobile: ?0\
sec-ch-ua-platform: "Linux"\
' https://stream.pacificaservice.org/khen_128k

curl https://stream.pacificaservice.org/khen_128k


This seems to work (no 404 but binary output)
curl -H "GET /khen_128 HTTP/1.1" \
-H "Accept: */*" \
-H "Accept-Encoding: identity;q=1, *;q=0" \
-H "Accept-Language: en-US,en;q=0.9" \
-H "Connection: keep-alive" \
-H "DNT: 1" \
-H "Host: stream.pacificaservice.org:9000" \
-H "Range: bytes=0-" \
-H "Referer: https://www.radiorethink.com/" \
-H "Sec-Fetch-Dest: audio" \
-H "Sec-Fetch-Mode: no-cors" \
-H "Sec-Fetch-Site: cross-site" \
-H "Sec-Fetch-Storage-Access: none" \
-H "User-Agent: Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/139.0.0.0 Safari/537.36" \
-H "sec-ch-ua: \"Not;A=Brand\";v=\"99\", \"Google Chrome\";v=\"139\", \"Chromium\";v=\"139\"" \
-H "sec-ch-ua-mobile: ?0" \
-H "sec-ch-ua-platform: \"Linux\"" \
-X GET \
https://stream.pacificaservice.org:9000/khen_128

This works too


curl -H "GET /khen_128 HTTP/1.1" \
-H "Host: stream.pacificaservice.org:9000" \
-H "Range: bytes=0-" \
-H "Referer: https://www.radiorethink.com/" \
-X GET \
https://stream.pacificaservice.org:9000/khen_128

this works

curl -H "GET /khen_128 HTTP/1.1" \
-H "Referer: https://www.radiorethink.com/" \
-X GET \
https://stream.pacificaservice.org:9000/khen_128

this works

curl -H "GET /khen_128 HTTP/1.1" \
-H "Referer: https://www.radiorethink.com/" \
https://stream.pacificaservice.org:9000/khen_128

this works

curl -H "Referer: https://www.radiorethink.com/" \
https://stream.pacificaservice.org:9000/khen_128

this works too.  But this url returns 404 when called from the http_stream

curl https://stream.pacificaservice.org:9000/khen_128

This returns a bunch of binary data that seems plausible

curl https://stream.pacificaservice.org:9000/khen_128 | head -c 1000 |hexdump -C


below confirms that the encoding is mp3, claims that there is 293 bytes of junk at the start
further tests 368 bytes of junk, 207, 161, 408
ffprobe https://stream.pacificaservice.org:9000/khen_128


no junk in this one
ffprobe https://kexp.streamguys1.com/kexp160.aac


gemini's suggestion for ignoring leading garbage in mp3 streams:

#include <esp_adf.h>
#include <audio_pipeline.h>
#include <http_stream.h>
#include <mp3_decoder.h>
#include <board.h>

// Assume audio_pipeline, http_stream, and mp3_decoder are already configured
audio_element_handle_t http_stream_reader;
audio_element_handle_t mp3_decoder;

// Custom function to find the next MP3 frame in the buffer
bool find_mp3_sync_word(uint8_t* buffer, int len, int* offset) {
    for (int i = 0; i < len - 4; i++) {
        // Check for the 12-bit synchronization word (1111 1111 1111)
        if ((buffer[i] == 0xFF) && ((buffer[i+1] & 0xE0) == 0xE0)) {
            // Check for a valid MPEG Audio Version (1 or 2) and Layer (3)
            // (e.g., FFFB for MPEG1, Layer III)
            // For a robust implementation, you would parse the full header
            // to ensure it's a valid frame.
            *offset = i;
            return true;
        }
    }
    return false;
}

// Custom read function to discard junk data
int custom_read(audio_element_handle_t self, char *buffer, int len, TickType_t ticks_to_wait, void *context) {
    int bytes_read = audio_element_input(http_stream_reader, buffer, len, ticks_to_wait);
    if (bytes_read <= 0) {
        return bytes_read;
    }

    int offset = 0;
    while (!find_mp3_sync_word((uint8_t*)buffer + offset, bytes_read - offset, &offset)) {
        // Did not find a valid header, read more data
        int new_bytes = audio_element_input(http_stream_reader, buffer + bytes_read, len - bytes_read, ticks_to_wait);
        if (new_bytes <= 0) {
            // No more data or an error occurred
            return -1;
        }
        bytes_read += new_bytes;
    }

    // A sync word was found, move the audio data to the start of the buffer
    memmove(buffer, buffer + offset, bytes_read - offset);
    return bytes_read - offset;
}

// In your pipeline setup, use the custom read function
// e.g., audio_element_set_read_cb(http_stream_reader, custom_read, NULL);

curl https://stream.pacificaservice.org:9000/khen_128 | head -c 100000 > head_of_khen.mp3 & ffprobe head_of_khen.mp3

curl https://kexp.streamguys1.com/kexp160.aac | head -c 1000 > head_of_kexp.aac & ffprobe head_of_kexp.aac

ffprobe discard before fffb,4  so perhaps we skip until fffb 

Look for icy header in khen 

curl -i https://stream.pacificaservice.org:9000/khen_128 | head -c 1000 |tee head_of_khen.mp3|hexdump -C
curl -i http://26273.live.streamtheworld.com/KBUTFM.mp3 | head -c 1000 |tee head_of_kbut.mp3|hexdump -C


log for khen:
I (3566) AUDIO_PIPELINE_MGR: Creating audio pipeline for codec type: MP3 with URI: http://stream.pacificaservice.org:9000/khen_128
I (3576) MP3_DECODER: MP3 init
I (3586) AUDIO_PIPELINE: link el->rb, el:0x3f803d2c, tag:http, rb:0x3f804474
I (3586) AUDIO_PIPELINE: link el->rb, el:0x3f804304, tag:codec, rb:0x3f8094bc
I (3596) AUDIO_PIPELINE_MGR: Audio pipeline with MP3 codec created successfully
I (3606) INTERNET_RADIO: Start audio_pipeline
I (3606) AUDIO_THREAD: The http task allocate stack on external memory
I (3616) AUDIO_ELEMENT: [http-0x3f803d2c] Element task created
I (3616) AUDIO_THREAD: The codec task allocate stack on external memory
I (3626) AUDIO_ELEMENT: [codec-0x3f804304] Element task created
I (3626) AUDIO_THREAD: The i2s task allocate stack on internal memory
I (3636) AUDIO_ELEMENT: [i2s-0x3f803f80] Element task created
I (3646) AUDIO_PIPELINE: Func:audio_pipeline_run, Line:359, MEM Total:4318796 Bytes, Inter:223211 Bytes, Dram:215771 Bytes, Dram largest free:86016Bytes

I (3656) AUDIO_ELEMENT: [http] AEL_MSG_CMD_RESUME,state:1
I (3666) AUDIO_ELEMENT: [codec] AEL_MSG_CMD_RESUME,state:1
I (3666) MP3_DECODER: MP3 opened
I (3666) wifi:<ba-add>idx:1 (ifx:0, 6a:95:75:42:ca:9c), tid:0, ssn:0, winSize:64
I (3676) AUDIO_ELEMENT: [i2s] AEL_MSG_CMD_RESUME,state:1
I (3686) AUDIO_PIPELINE: Pipeline started
E (4696) transport_base: tcp_read error, errno=Connection reset by peer
I (4696) HTTP_STREAM: total_bytes=-1
E (4696) HTTP_STREAM: Invalid HTTP stream, status code = -1
E (4706) AUDIO_ELEMENT: [http] AEL_STATUS_ERROR_OPEN,-1
W (4706) AUDIO_ELEMENT: [http] audio_element_on_cmd_error,7
W (4716) AUDIO_ELEMENT: IN-[codec] AEL_IO_ABORT
E (4716) MP3_DECODER: Failed to read audio data (line 136)
W (4726) AUDIO_ELEMENT: [codec] AEL_IO_ABORT, -3
I (4726) MP3_DECODER: Closed
I (4736) AUDIO_PIPELINE_MGR: Codec event callback triggered for element: codec, command: 11
I (4736) AUDIO_PIPELINE_MGR: Codec event callback triggered for element: codec, command: 8
W (4746) AUDIO_ELEMENT: IN-[i2s] AEL_IO_ABORT

curl -i -A "ESP32 HTTP Client/1.0"  https://stream.pacificaservice.org:9000/khen_128 | head -c 1000 |tee head_of_khen.mp3|hexdump -C
curl -v  https://stream.pacificaservice.org:9000/khen_128 | head -c 1000 |tee head_of_khen.mp3|hexdump -C
curl -v  http://stream.pacificaservice.org:9000/khen_128 | head -c 1000 |tee head_of_khen.mp3|hexdump -C

certificate given by curl:
*  CAfile: /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem
*  CApath: none


curl -v  http://26273.live.streamtheworld.com/KBUTFM.mp3 | head -c 1000 |tee head_of_kbut.mp3|hexdump -C
